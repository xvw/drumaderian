"lib/drumGame.ml" 30 889 893 "lib/drumGame.ml" 30 889 902
type(
  Dom_html.canvasElement Js.t ->
  Dom_html.canvasRenderingContext2D Js.t -> state
)
ident(
  def singleton "lib/drumGame.ml" 38 1027 1027 "lib/drumGame.ml" 1 0 -1
)
"lib/drumGame.ml" 30 889 903 "lib/drumGame.ml" 30 889 909
type(
  Dom_html.canvasElement Js.t
)
ident(
  def canvas "lib/drumGame.ml" 30 889 910 "lib/drumGame.ml" 36 1022 1025
)
"lib/drumGame.ml" 30 889 910 "lib/drumGame.ml" 30 889 913
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  def ctx "lib/drumGame.ml" 31 916 918 "lib/drumGame.ml" 36 1022 1025
)
"lib/drumGame.ml" 31 916 922 "lib/drumGame.ml" 31 916 923
type(
  Js.date Js.t
)
ident(
  def t "lib/drumGame.ml" 32 950 952 "lib/drumGame.ml" 36 1022 1025
)
"lib/drumGame.ml" 31 916 932 "lib/drumGame.ml" 31 916 943
type(
  Js.date Js.t Js.constr
)
type(
  Js.date Js.t Js.constr
)
ident(
  ext_ref Js.date_now
)
"lib/drumGame.ml" 31 916 926 "lib/drumGame.ml" 31 916 946
type(
  Js.date Js.t
)
type(
  Js.date Js.t
)
type(
  Js.date Js.t
)
type(
  Js.Unsafe.any array
)
type(
  Js.date Js.t Js.constr
)
ident(
  int_ref jsoo_173316d7 "lib/drumGame.ml" 31 916 926 "lib/drumGame.ml" 31 916 946
)
type(
  Js.date Js.t Js.constr -> Js.Unsafe.any array -> Js.date Js.t
)
ident(
  ext_ref Js.Unsafe.new_obj
)
type(
  Js.date Js.t Js.constr
)
ident(
  def jsoo_173316d7 "lib/drumGame.ml" 31 916 926 "lib/drumGame.ml" 31 916 946
)
"lib/drumGame.ml" 33 954 968 "lib/drumGame.ml" 33 954 974
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref canvas "lib/drumGame.ml" 30 889 903 "lib/drumGame.ml" 30 889 909
)
"lib/drumGame.ml" 34 975 989 "lib/drumGame.ml" 34 975 992
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  int_ref ctx "lib/drumGame.ml" 30 889 910 "lib/drumGame.ml" 30 889 913
)
"lib/drumGame.ml" 35 993 1007 "lib/drumGame.ml" 35 993 1008
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth >
)
ident(
  int_ref x "lib/drumGame.ml" 35 993 1007 "lib/drumGame.ml" 35 993 1021
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth >
  Js.t
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth >
  Js.t
)
type(
  Js.date Js.t
)
ident(
  int_ref jsoo_self "lib/drumGame.ml" 35 993 1007 "lib/drumGame.ml" 35 993 1021
)
type(
  Js.date Js.t
)
ident(
  int_ref t "lib/drumGame.ml" 31 916 922 "lib/drumGame.ml" 31 916 923
)
"lib/drumGame.ml" 35 993 1007 "lib/drumGame.ml" 35 993 1019
call(
  tail
)
type(
  float Js.meth
)
type(
  float Js.meth
)
"lib/drumGame.ml" 35 993 1007 "lib/drumGame.ml" 35 993 1021
type(
  float
)
type(
  float
)
type(
  float
)
type(
  float
)
ident(
  int_ref M.res "lib/drumGame.ml" 35 993 1007 "lib/drumGame.ml" 35 993 1021
)
type(
  float
)
type(
  float
)
type(
  float
)
type(
  float
)
ident(
  int_ref jsoo_res "lib/drumGame.ml" 35 993 1007 "lib/drumGame.ml" 35 993 1021
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth > ->
  float Js.meth
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth >
)
ident(
  def x "lib/drumGame.ml" 35 993 1007 "lib/drumGame.ml" 35 993 1019
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth > ->
  float Js.meth
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth >
  Js.t
)
type(
  float
)
ident(
  def res "lib/drumGame.ml" 35 993 1021 "lib/drumGame.ml" 35 993 1021
)
type(
  'b
)
type(
  Js.Unsafe.any array
)
type(
  string
)
type(
  Js.date Js.t
)
ident(
  int_ref jsoo_self "lib/drumGame.ml" 35 993 1007 "lib/drumGame.ml" 35 993 1021
)
type(
  Js.date Js.t -> string -> Js.Unsafe.any array -> 'b
)
ident(
  ext_ref Js.Unsafe.meth_call
)
type(
  'b
)
ident(
  def jsoo_res "lib/drumGame.ml" 35 993 1007 "lib/drumGame.ml" 35 993 1021
)
type(
  Js.date Js.t
)
ident(
  def jsoo_self "lib/drumGame.ml" 35 993 1007 "lib/drumGame.ml" 35 993 1021
)
"lib/drumGame.ml" 32 950 952 "lib/drumGame.ml" 36 1022 1025
type(
  state
)
"lib/drumGame.ml" 31 916 918 "lib/drumGame.ml" 36 1022 1025
type(
  state
)
"lib/drumGame.ml" 30 889 910 "lib/drumGame.ml" 36 1022 1025
type(
  Dom_html.canvasRenderingContext2D Js.t -> state
)
"lib/drumGame.ml" 30 889 903 "lib/drumGame.ml" 36 1022 1025
type(
  Dom_html.canvasElement Js.t ->
  Dom_html.canvasRenderingContext2D Js.t -> state
)
"lib/drumGame.ml" 38 1027 1031 "lib/drumGame.ml" 38 1027 1041
type(
  state -> state
)
ident(
  def next_state "lib/drumGame.ml" 42 1124 1124 "lib/drumGame.ml" 1 0 -1
)
"lib/drumGame.ml" 38 1027 1042 "lib/drumGame.ml" 38 1027 1047
type(
  state
)
ident(
  def state "lib/drumGame.ml" 39 1050 1052 "lib/drumGame.ml" 40 1084 1122
)
"lib/drumGame.ml" 39 1050 1056 "lib/drumGame.ml" 39 1050 1057
type(
  Js.date Js.t
)
ident(
  def t "lib/drumGame.ml" 40 1084 1086 "lib/drumGame.ml" 40 1084 1122
)
"lib/drumGame.ml" 39 1050 1066 "lib/drumGame.ml" 39 1050 1077
type(
  Js.date Js.t Js.constr
)
type(
  Js.date Js.t Js.constr
)
ident(
  ext_ref Js.date_now
)
"lib/drumGame.ml" 39 1050 1060 "lib/drumGame.ml" 39 1050 1080
type(
  Js.date Js.t
)
type(
  Js.date Js.t
)
type(
  Js.date Js.t
)
type(
  Js.Unsafe.any array
)
type(
  Js.date Js.t Js.constr
)
ident(
  int_ref jsoo_ad7fbbdd "lib/drumGame.ml" 39 1050 1060 "lib/drumGame.ml" 39 1050 1080
)
type(
  Js.date Js.t Js.constr -> Js.Unsafe.any array -> Js.date Js.t
)
ident(
  ext_ref Js.Unsafe.new_obj
)
type(
  Js.date Js.t Js.constr
)
ident(
  def jsoo_ad7fbbdd "lib/drumGame.ml" 39 1050 1060 "lib/drumGame.ml" 39 1050 1080
)
"lib/drumGame.ml" 40 1084 1088 "lib/drumGame.ml" 40 1084 1093
type(
  state
)
ident(
  int_ref state "lib/drumGame.ml" 38 1027 1042 "lib/drumGame.ml" 38 1027 1047
)
"lib/drumGame.ml" 40 1084 1106 "lib/drumGame.ml" 40 1084 1107
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth >
)
ident(
  int_ref x "lib/drumGame.ml" 40 1084 1106 "lib/drumGame.ml" 40 1084 1120
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth >
  Js.t
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth >
  Js.t
)
type(
  Js.date Js.t
)
ident(
  int_ref jsoo_self "lib/drumGame.ml" 40 1084 1106 "lib/drumGame.ml" 40 1084 1120
)
type(
  Js.date Js.t
)
ident(
  int_ref t "lib/drumGame.ml" 39 1050 1056 "lib/drumGame.ml" 39 1050 1057
)
"lib/drumGame.ml" 40 1084 1106 "lib/drumGame.ml" 40 1084 1118
call(
  tail
)
type(
  float Js.meth
)
type(
  float Js.meth
)
"lib/drumGame.ml" 40 1084 1106 "lib/drumGame.ml" 40 1084 1120
type(
  float
)
type(
  float
)
type(
  float
)
type(
  float
)
ident(
  int_ref M.res "lib/drumGame.ml" 40 1084 1106 "lib/drumGame.ml" 40 1084 1120
)
type(
  float
)
type(
  float
)
type(
  float
)
type(
  float
)
ident(
  int_ref jsoo_res "lib/drumGame.ml" 40 1084 1106 "lib/drumGame.ml" 40 1084 1120
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth > ->
  float Js.meth
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth >
)
ident(
  def x "lib/drumGame.ml" 40 1084 1106 "lib/drumGame.ml" 40 1084 1118
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth > ->
  float Js.meth
)
type(
  < getDate : int Js.meth; getDay : int Js.meth; getFullYear : int Js.meth;
    getHours : int Js.meth; getMilliseconds : int Js.meth;
    getMinutes : int Js.meth; getMonth : int Js.meth;
    getSeconds : int Js.meth; getTime : float Js.meth;
    getTimezoneOffset : int Js.meth; getUTCDate : int Js.meth;
    getUTCDay : int Js.meth; getUTCFullYear : int Js.meth;
    getUTCHours : int Js.meth; getUTCMilliseconds : int Js.meth;
    getUTCMinutes : int Js.meth; getUTCMonth : int Js.meth;
    getUTCSeconds : int Js.meth; setDate : int -> float Js.meth;
    setDay : int -> float Js.meth; setFullYear : int -> float Js.meth;
    setHours : int -> float Js.meth; setMilliseconds : int -> float Js.meth;
    setMinutes : int -> float Js.meth; setMonth : int -> float Js.meth;
    setSeconds : int -> float Js.meth; setTime : float -> float Js.meth;
    setUTCDate : int -> float Js.meth; setUTCDay : int -> float Js.meth;
    setUTCFullYear : int -> float Js.meth;
    setUTCHours : int -> float Js.meth;
    setUTCMilliseconds : int -> float Js.meth;
    setUTCMinutes : int -> float Js.meth; setUTCMonth : int -> float Js.meth;
    setUTCSeconds : int -> float Js.meth;
    toDateString : Js.js_string Js.t Js.meth;
    toISOString : Js.js_string Js.t Js.meth;
    toJSON : 'a. 'a -> Js.js_string Js.t Js.meth;
    toLocaleDateString : Js.js_string Js.t Js.meth;
    toLocaleString : Js.js_string Js.t Js.meth;
    toLocaleTimeString : Js.js_string Js.t Js.meth;
    toString : Js.js_string Js.t Js.meth;
    toTimeString : Js.js_string Js.t Js.meth;
    toUTCString : Js.js_string Js.t Js.meth; valueOf : float Js.meth >
  Js.t
)
type(
  float
)
ident(
  def res "lib/drumGame.ml" 40 1084 1120 "lib/drumGame.ml" 40 1084 1120
)
type(
  'b
)
type(
  Js.Unsafe.any array
)
type(
  string
)
type(
  Js.date Js.t
)
ident(
  int_ref jsoo_self "lib/drumGame.ml" 40 1084 1106 "lib/drumGame.ml" 40 1084 1120
)
type(
  Js.date Js.t -> string -> Js.Unsafe.any array -> 'b
)
ident(
  ext_ref Js.Unsafe.meth_call
)
type(
  'b
)
ident(
  def jsoo_res "lib/drumGame.ml" 40 1084 1106 "lib/drumGame.ml" 40 1084 1120
)
type(
  Js.date Js.t
)
ident(
  def jsoo_self "lib/drumGame.ml" 40 1084 1106 "lib/drumGame.ml" 40 1084 1120
)
"lib/drumGame.ml" 40 1084 1086 "lib/drumGame.ml" 40 1084 1122
type(
  state
)
"lib/drumGame.ml" 39 1050 1052 "lib/drumGame.ml" 40 1084 1122
type(
  state
)
"lib/drumGame.ml" 38 1027 1042 "lib/drumGame.ml" 40 1084 1122
type(
  state -> state
)
"lib/drumGame.ml" 42 1124 1128 "lib/drumGame.ml" 42 1124 1139
type(
  DrumColor.t -> state -> unit
)
ident(
  def fill_canvas "lib/drumGame.ml" 48 1353 1353 "lib/drumGame.ml" 1 0 -1
)
"lib/drumGame.ml" 42 1124 1140 "lib/drumGame.ml" 42 1124 1143
type(
  DrumColor.t
)
ident(
  def clr "lib/drumGame.ml" 42 1124 1144 "lib/drumGame.ml" 46 1314 1351
)
"lib/drumGame.ml" 42 1124 1144 "lib/drumGame.ml" 42 1124 1149
type(
  state
)
ident(
  def state "lib/drumGame.ml" 43 1152 1154 "lib/drumGame.ml" 46 1314 1351
)
"lib/drumGame.ml" 43 1152 1158 "lib/drumGame.ml" 43 1152 1159
type(
  float
)
ident(
  def w "lib/drumGame.ml" 44 1203 1205 "lib/drumGame.ml" 46 1314 1351
)
"lib/drumGame.ml" 43 1152 1163 "lib/drumGame.ml" 43 1152 1175
type(
  int -> float
)
ident(
  ext_ref Pervasives.float_of_int
)
"lib/drumGame.ml" 43 1152 1177 "lib/drumGame.ml" 43 1152 1182
type(
  state
)
ident(
  int_ref state "lib/drumGame.ml" 42 1124 1144 "lib/drumGame.ml" 42 1124 1149
)
"lib/drumGame.ml" 43 1152 1177 "lib/drumGame.ml" 43 1152 1189
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
)
ident(
  int_ref x "lib/drumGame.ml" 43 1152 1177 "lib/drumGame.ml" 43 1152 1198
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref jsoo_obj "lib/drumGame.ml" 43 1152 1177 "lib/drumGame.ml" 43 1152 1198
)
type(
  Dom_html.canvasElement Js.t
)
"lib/drumGame.ml" 43 1152 1177 "lib/drumGame.ml" 43 1152 1198
call(
  tail
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
ident(
  int_ref M.res "lib/drumGame.ml" 43 1152 1177 "lib/drumGame.ml" 43 1152 1198
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
ident(
  int_ref jsoo_res "lib/drumGame.ml" 43 1152 1177 "lib/drumGame.ml" 43 1152 1198
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop > ->
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  int Js.prop
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
)
ident(
  def x "lib/drumGame.ml" 43 1152 1177 "lib/drumGame.ml" 43 1152 1198
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop > ->
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  int
)
ident(
  def res "lib/drumGame.ml" 43 1152 1198 "lib/drumGame.ml" 43 1152 1198
)
type(
  'a
)
type(
  string
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref jsoo_obj "lib/drumGame.ml" 43 1152 1177 "lib/drumGame.ml" 43 1152 1198
)
type(
  Dom_html.canvasElement Js.t -> string -> 'a
)
ident(
  ext_ref Js.Unsafe.get
)
type(
  'a
)
ident(
  def jsoo_res "lib/drumGame.ml" 43 1152 1177 "lib/drumGame.ml" 43 1152 1198
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  def jsoo_obj "lib/drumGame.ml" 43 1152 1177 "lib/drumGame.ml" 43 1152 1198
)
"lib/drumGame.ml" 43 1152 1163 "lib/drumGame.ml" 43 1152 1199
type(
  float
)
"lib/drumGame.ml" 44 1203 1209 "lib/drumGame.ml" 44 1203 1210
type(
  float
)
ident(
  def h "lib/drumGame.ml" 45 1255 1257 "lib/drumGame.ml" 46 1314 1351
)
"lib/drumGame.ml" 44 1203 1214 "lib/drumGame.ml" 44 1203 1226
type(
  int -> float
)
ident(
  ext_ref Pervasives.float_of_int
)
"lib/drumGame.ml" 44 1203 1228 "lib/drumGame.ml" 44 1203 1233
type(
  state
)
ident(
  int_ref state "lib/drumGame.ml" 42 1124 1144 "lib/drumGame.ml" 42 1124 1149
)
"lib/drumGame.ml" 44 1203 1228 "lib/drumGame.ml" 44 1203 1240
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
)
ident(
  int_ref x "lib/drumGame.ml" 44 1203 1228 "lib/drumGame.ml" 44 1203 1250
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref jsoo_obj "lib/drumGame.ml" 44 1203 1228 "lib/drumGame.ml" 44 1203 1250
)
type(
  Dom_html.canvasElement Js.t
)
"lib/drumGame.ml" 44 1203 1228 "lib/drumGame.ml" 44 1203 1250
call(
  tail
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
ident(
  int_ref M.res "lib/drumGame.ml" 44 1203 1228 "lib/drumGame.ml" 44 1203 1250
)
type(
  int
)
type(
  int
)
type(
  int
)
type(
  int
)
ident(
  int_ref jsoo_res "lib/drumGame.ml" 44 1203 1228 "lib/drumGame.ml" 44 1203 1250
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop > ->
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  int Js.prop
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
)
ident(
  def x "lib/drumGame.ml" 44 1203 1228 "lib/drumGame.ml" 44 1203 1250
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop > ->
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  int
)
ident(
  def res "lib/drumGame.ml" 44 1203 1250 "lib/drumGame.ml" 44 1203 1250
)
type(
  'b
)
type(
  string
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref jsoo_obj "lib/drumGame.ml" 44 1203 1228 "lib/drumGame.ml" 44 1203 1250
)
type(
  Dom_html.canvasElement Js.t -> string -> 'b
)
ident(
  ext_ref Js.Unsafe.get
)
type(
  'b
)
ident(
  def jsoo_res "lib/drumGame.ml" 44 1203 1228 "lib/drumGame.ml" 44 1203 1250
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  def jsoo_obj "lib/drumGame.ml" 44 1203 1228 "lib/drumGame.ml" 44 1203 1250
)
"lib/drumGame.ml" 44 1203 1214 "lib/drumGame.ml" 44 1203 1251
type(
  float
)
"lib/drumGame.ml" 45 1255 1261 "lib/drumGame.ml" 45 1255 1263
type(
  unit
)
"lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1271
type(
  state
)
ident(
  int_ref state "lib/drumGame.ml" 42 1124 1144 "lib/drumGame.ml" 42 1124 1149
)
"lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1275
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'c.
                      (#Dom_html.element as 'c) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth >
)
ident(
  int_ref x "lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1310
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'd.
                      (#Dom_html.element as 'd) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth >
  Js.t
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'e.
                      (#Dom_html.element as 'e) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth >
  Js.t
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  int_ref jsoo_obj "lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1310
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
"lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1288
call(
  tail
)
type(
  < set : Js.js_string Js.t -> unit > Js.gen_prop
)
type(
  Js.js_string Js.t Js.writeonly_prop
)
"lib/drumGame.ml" 45 1255 1293 "lib/drumGame.ml" 45 1255 1305
type(
  DrumColor.t -> Js.js_string Js.t
)
ident(
  ext_ref DrumColor.js
)
"lib/drumGame.ml" 45 1255 1306 "lib/drumGame.ml" 45 1255 1309
type(
  DrumColor.t
)
ident(
  int_ref clr "lib/drumGame.ml" 42 1124 1140 "lib/drumGame.ml" 42 1124 1143
)
"lib/drumGame.ml" 45 1255 1293 "lib/drumGame.ml" 45 1255 1309
call(
  stack
)
type(
  Js.js_string Js.t
)
type(
  Js.js_string Js.t
)
ident(
  int_ref jsoo_arg "lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1310
)
type(
  Js.js_string Js.t
)
"lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1310
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  Js.js_string Js.t
)
ident(
  int_ref jsoo_arg "lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1310
)
type(
  string
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  int_ref jsoo_obj "lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1310
)
type(
  Dom_html.canvasRenderingContext2D Js.t ->
  string -> Js.js_string Js.t -> unit
)
ident(
  ext_ref Js.Unsafe.set
)
type(
  Js.js_string Js.t
)
type(
  Js.js_string Js.t
)
ident(
  int_ref M.res "lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1310
)
type(
  Js.js_string Js.t
)
type(
  Js.js_string Js.t
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'f.
                      (#Dom_html.element as 'f) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth > ->
  < set : Js.js_string Js.t -> unit > Js.gen_prop
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'g.
                      (#Dom_html.element as 'g) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth >
)
ident(
  def x "lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1288
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'h.
                      (#Dom_html.element as 'h) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth > ->
  < set : Js.js_string Js.t -> unit > Js.gen_prop
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'i.
                      (#Dom_html.element as 'i) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth >
  Js.t
)
type(
  Js.js_string Js.t
)
ident(
  def res "lib/drumGame.ml" 45 1255 1310 "lib/drumGame.ml" 45 1255 1310
)
type(
  Js.js_string Js.t
)
type(
  Js.js_string Js.t
)
ident(
  def jsoo_arg "lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1310
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  def jsoo_obj "lib/drumGame.ml" 45 1255 1266 "lib/drumGame.ml" 45 1255 1310
)
"lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1320
type(
  state
)
ident(
  int_ref state "lib/drumGame.ml" 42 1124 1144 "lib/drumGame.ml" 42 1124 1149
)
"lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1325
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'j.
                      (#Dom_html.element as 'j) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth >
)
ident(
  int_ref x "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'k.
                      (#Dom_html.element as 'k) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth >
  Js.t
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'l.
                      (#Dom_html.element as 'l) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth >
  Js.t
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  int_ref jsoo_self "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
"lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1337
call(
  tail
)
type(
  float -> float -> float -> float -> unit Js.meth
)
type(
  float -> float -> float -> float -> unit Js.meth
)
"lib/drumGame.ml" 46 1314 1338 "lib/drumGame.ml" 46 1314 1340
type(
  unit
)
type(
  float
)
type(
  float
)
ident(
  int_ref jsoo_776737d4 "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float
)
type(
  float
)
"lib/drumGame.ml" 46 1314 1342 "lib/drumGame.ml" 46 1314 1344
type(
  unit
)
type(
  float
)
type(
  float
)
ident(
  int_ref jsoo_521a4c10 "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float
)
type(
  float
)
"lib/drumGame.ml" 46 1314 1346 "lib/drumGame.ml" 46 1314 1347
type(
  unit
)
type(
  float
)
type(
  float
)
ident(
  int_ref jsoo_96770fe7 "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float
)
type(
  float
)
ident(
  int_ref w "lib/drumGame.ml" 43 1152 1158 "lib/drumGame.ml" 43 1152 1159
)
"lib/drumGame.ml" 46 1314 1349 "lib/drumGame.ml" 46 1314 1350
type(
  unit
)
type(
  float
)
type(
  float
)
ident(
  int_ref jsoo_bcb1e9dd "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float
)
type(
  float
)
ident(
  int_ref h "lib/drumGame.ml" 44 1203 1209 "lib/drumGame.ml" 44 1203 1210
)
"lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
ident(
  int_ref M.res "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  unit
)
ident(
  int_ref jsoo_res "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'm.
                      (#Dom_html.element as 'm) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth > ->
  float -> float -> float -> float -> unit Js.meth
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'n.
                      (#Dom_html.element as 'n) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth >
)
ident(
  def x "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1337
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'o.
                      (#Dom_html.element as 'o) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth > ->
  float -> float -> float -> float -> unit Js.meth
)
type(
  < arc : float ->
          float -> float -> float -> float -> bool Js.t -> unit Js.meth;
    arcTo : float -> float -> float -> float -> float -> unit Js.meth;
    beginPath : unit Js.meth;
    bezierCurveTo : float ->
                    float -> float -> float -> float -> float -> unit Js.meth;
    canvas : Dom_html.canvasElement Js.t Js.readonly_prop;
    clearRect : float -> float -> float -> float -> unit Js.meth;
    clip : unit Js.meth; closePath : unit Js.meth;
    createImageData : int -> int -> Dom_html.imageData Js.t Js.meth;
    createLinearGradient : float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    createPattern : Dom_html.imageElement Js.t ->
                    Js.js_string Js.t -> Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromCanvas : Dom_html.canvasElement Js.t ->
                               Js.js_string Js.t ->
                               Dom_html.canvasPattern Js.t Js.meth;
    createPattern_fromVideo : Dom_html.videoElement Js.t ->
                              Js.js_string Js.t ->
                              Dom_html.canvasPattern Js.t Js.meth;
    createRadialGradient : float ->
                           float ->
                           float ->
                           float ->
                           float ->
                           float -> Dom_html.canvasGradient Js.t Js.meth;
    drawFocusRing : 'p.
                      (#Dom_html.element as 'p) Js.t ->
                      float -> float -> bool Js.t -> bool Js.t Js.meth;
    drawImage : Dom_html.imageElement Js.t -> float -> float -> unit Js.meth;
    drawImage_fromCanvas : Dom_html.canvasElement Js.t ->
                           float -> float -> unit Js.meth;
    drawImage_fromCanvasWithSize : Dom_html.canvasElement Js.t ->
                                   float ->
                                   float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithSize : Dom_html.videoElement Js.t ->
                                  float ->
                                  float -> float -> float -> unit Js.meth;
    drawImage_fromVideoWithVideo : Dom_html.videoElement Js.t ->
                                   float -> float -> unit Js.meth;
    drawImage_full : Dom_html.imageElement Js.t ->
                     float ->
                     float ->
                     float ->
                     float ->
                     float -> float -> float -> float -> unit Js.meth;
    drawImage_fullFromCanvas : Dom_html.canvasElement Js.t ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float ->
                               float -> float -> float -> unit Js.meth;
    drawImage_fullFromVideo : Dom_html.videoElement Js.t ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float ->
                              float -> float -> float -> unit Js.meth;
    drawImage_withSize : Dom_html.imageElement Js.t ->
                         float -> float -> float -> float -> unit Js.meth;
    fill : unit Js.meth;
    fillRect : float -> float -> float -> float -> unit Js.meth;
    fillStyle : Js.js_string Js.t Js.writeonly_prop;
    fillStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    fillStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    fillText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    fillText_withWidth : Js.js_string Js.t ->
                         float -> float -> float -> unit Js.meth;
    font : Js.js_string Js.t Js.prop;
    getImageData : float ->
                   float -> float -> float -> Dom_html.imageData Js.t Js.meth;
    globalAlpha : float Js.prop;
    globalCompositeOperation : Js.js_string Js.t Js.prop;
    isPointInPath : float -> float -> bool Js.t Js.meth;
    lineCap : Js.js_string Js.t Js.prop;
    lineJoin : Js.js_string Js.t Js.prop;
    lineTo : float -> float -> unit Js.meth; lineWidth : float Js.prop;
    measureText : Js.js_string Js.t -> Dom_html.textMetrics Js.t Js.meth;
    miterLimit : float Js.prop; moveTo : float -> float -> unit Js.meth;
    putImageData : Dom_html.imageData Js.t -> float -> float -> unit Js.meth;
    quadraticCurveTo : float -> float -> float -> float -> unit Js.meth;
    rect : float -> float -> float -> float -> unit Js.meth;
    restore : unit Js.meth; rotate : float -> unit Js.meth;
    save : unit Js.meth; scale : float -> float -> unit Js.meth;
    setTransform : float ->
                   float -> float -> float -> float -> float -> unit Js.meth;
    shadowBlur : float Js.prop; shadowColor : Js.js_string Js.t Js.prop;
    shadowOffsetX : float Js.prop; shadowOffsetY : float Js.prop;
    stroke : unit Js.meth;
    strokeRect : float -> float -> float -> float -> unit Js.meth;
    strokeStyle : Js.js_string Js.t Js.writeonly_prop;
    strokeStyle_gradient : Dom_html.canvasGradient Js.t Js.writeonly_prop;
    strokeStyle_pattern : Dom_html.canvasPattern Js.t Js.writeonly_prop;
    strokeText : Js.js_string Js.t -> float -> float -> unit Js.meth;
    strokeText_withWidth : Js.js_string Js.t ->
                           float -> float -> float -> unit Js.meth;
    textAlign : Js.js_string Js.t Js.prop;
    textBaseline : Js.js_string Js.t Js.prop;
    transform : float ->
                float -> float -> float -> float -> float -> unit Js.meth;
    translate : float -> float -> unit Js.meth >
  Js.t
)
type(
  unit
)
ident(
  def res "lib/drumGame.ml" 46 1314 1351 "lib/drumGame.ml" 46 1314 1351
)
type(
  'q
)
type(
  Js.Unsafe.any array
)
type(
  Js.Unsafe.any
)
type(
  float
)
ident(
  int_ref jsoo_bcb1e9dd "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float -> Js.Unsafe.any
)
ident(
  ext_ref Js.Unsafe.inject
)
type(
  Js.Unsafe.any
)
type(
  float
)
ident(
  int_ref jsoo_96770fe7 "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float -> Js.Unsafe.any
)
ident(
  ext_ref Js.Unsafe.inject
)
type(
  Js.Unsafe.any
)
type(
  float
)
ident(
  int_ref jsoo_521a4c10 "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float -> Js.Unsafe.any
)
ident(
  ext_ref Js.Unsafe.inject
)
type(
  Js.Unsafe.any
)
type(
  float
)
ident(
  int_ref jsoo_776737d4 "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float -> Js.Unsafe.any
)
ident(
  ext_ref Js.Unsafe.inject
)
type(
  string
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  int_ref jsoo_self "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  Dom_html.canvasRenderingContext2D Js.t ->
  string -> Js.Unsafe.any array -> 'q
)
ident(
  ext_ref Js.Unsafe.meth_call
)
type(
  'q
)
ident(
  def jsoo_res "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  def jsoo_self "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float
)
ident(
  def jsoo_bcb1e9dd "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float
)
ident(
  def jsoo_96770fe7 "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float
)
ident(
  def jsoo_521a4c10 "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
type(
  float
)
ident(
  def jsoo_776737d4 "lib/drumGame.ml" 46 1314 1315 "lib/drumGame.ml" 46 1314 1351
)
"lib/drumGame.ml" 45 1255 1257 "lib/drumGame.ml" 46 1314 1351
type(
  unit
)
"lib/drumGame.ml" 44 1203 1205 "lib/drumGame.ml" 46 1314 1351
type(
  unit
)
"lib/drumGame.ml" 43 1152 1154 "lib/drumGame.ml" 46 1314 1351
type(
  unit
)
"lib/drumGame.ml" 42 1124 1144 "lib/drumGame.ml" 46 1314 1351
type(
  state -> unit
)
"lib/drumGame.ml" 42 1124 1140 "lib/drumGame.ml" 46 1314 1351
type(
  DrumColor.t -> state -> unit
)
"lib/drumGame.ml" 48 1353 1361 "lib/drumGame.ml" 48 1353 1367
type(
  state -> unit
)
ident(
  def update "lib/drumGame.ml" 48 1353 1353 "lib/drumGame.ml" 1 0 -1
)
"lib/drumGame.ml" 48 1353 1368 "lib/drumGame.ml" 48 1353 1373
type(
  state
)
ident(
  def state "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1548
)
"lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 49 1376 1393
type(
  < alert : Js.js_string Js.t -> unit Js.meth;
    applicationCache : Dom_html.applicationCache Js.t Js.readonly_prop;
    blur : unit Js.meth;
    cancelAnimationFrame : Dom_html.animation_frame_request_id ->
                           unit Js.meth;
    clearInterval : Dom_html.interval_id -> unit Js.meth;
    clearTimeout : Dom_html.timeout_id -> unit Js.meth; close : unit Js.meth;
    closed : bool Js.t Js.readonly_prop;
    confirm : Js.js_string Js.t -> bool Js.t Js.meth;
    document : Dom_html.document Js.t Js.readonly_prop; focus : unit Js.meth;
    frameElement : Dom_html.element Js.t Js.opt Js.readonly_prop;
    getSelection : Dom_html.selection Js.t Js.meth;
    history : Dom_html.history Js.t Js.readonly_prop;
    innerHeight : int Js.optdef Js.readonly_prop;
    innerWidth : int Js.optdef Js.readonly_prop;
    localStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    location : Dom_html.location Js.t Js.readonly_prop;
    name : Js.js_string Js.t Js.prop;
    navigator : Dom_html.navigator Js.t Js.readonly_prop;
    onbeforeunload : (Dom_html.window Js.t, Dom_html.event Js.t)
                     Dom_html.event_listener Js.prop;
    onblur : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onfocus : (Dom_html.window Js.t, Dom_html.event Js.t)
              Dom_html.event_listener Js.prop;
    onhashchange : (Dom_html.window Js.t, Dom_html.hashChangeEvent Js.t)
                   Dom_html.event_listener Js.prop;
    onkeydown : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onload : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onmousedown : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onoffline : (Dom_html.window Js.t, Dom_html.event Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ononline : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onorientationchange : (Dom_html.window Js.t, Dom_html.event Js.t)
                          Dom_html.event_listener Js.prop;
    onpopstate : (Dom_html.window Js.t, Dom_html.popStateEvent Js.t)
                 Dom_html.event_listener Js.prop;
    onresize : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    onscroll : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onunload : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    open_ : Js.js_string Js.t ->
            Js.js_string Js.t ->
            Js.js_string Js.t Js.opt -> Dom_html.window Js.t Js.meth;
    outerHeight : int Js.optdef Js.readonly_prop;
    outerWidth : int Js.optdef Js.readonly_prop;
    parent : Dom_html.window Js.t Js.readonly_prop; print : unit Js.meth;
    prompt : Js.js_string Js.t ->
             Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    requestAnimationFrame : (float -> unit) Js.callback ->
                            Dom_html.animation_frame_request_id Js.meth;
    screen : Dom_html.screen Js.t Js.readonly_prop;
    scroll : int -> int -> unit Js.meth;
    sessionStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    setInterval : (unit -> unit) Js.callback ->
                  float -> Dom_html.interval_id Js.meth;
    setTimeout : (unit -> unit) Js.callback ->
                 float -> Dom_html.timeout_id Js.meth;
    stop : unit Js.meth; top : Dom_html.window Js.t Js.readonly_prop;
    undoManager : Dom_html.undoManager Js.t Js.readonly_prop >
)
ident(
  int_ref x "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1538
)
type(
  < alert : Js.js_string Js.t -> unit Js.meth;
    applicationCache : Dom_html.applicationCache Js.t Js.readonly_prop;
    blur : unit Js.meth;
    cancelAnimationFrame : Dom_html.animation_frame_request_id ->
                           unit Js.meth;
    clearInterval : Dom_html.interval_id -> unit Js.meth;
    clearTimeout : Dom_html.timeout_id -> unit Js.meth; close : unit Js.meth;
    closed : bool Js.t Js.readonly_prop;
    confirm : Js.js_string Js.t -> bool Js.t Js.meth;
    document : Dom_html.document Js.t Js.readonly_prop; focus : unit Js.meth;
    frameElement : Dom_html.element Js.t Js.opt Js.readonly_prop;
    getSelection : Dom_html.selection Js.t Js.meth;
    history : Dom_html.history Js.t Js.readonly_prop;
    innerHeight : int Js.optdef Js.readonly_prop;
    innerWidth : int Js.optdef Js.readonly_prop;
    localStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    location : Dom_html.location Js.t Js.readonly_prop;
    name : Js.js_string Js.t Js.prop;
    navigator : Dom_html.navigator Js.t Js.readonly_prop;
    onbeforeunload : (Dom_html.window Js.t, Dom_html.event Js.t)
                     Dom_html.event_listener Js.prop;
    onblur : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onfocus : (Dom_html.window Js.t, Dom_html.event Js.t)
              Dom_html.event_listener Js.prop;
    onhashchange : (Dom_html.window Js.t, Dom_html.hashChangeEvent Js.t)
                   Dom_html.event_listener Js.prop;
    onkeydown : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onload : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onmousedown : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onoffline : (Dom_html.window Js.t, Dom_html.event Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ononline : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onorientationchange : (Dom_html.window Js.t, Dom_html.event Js.t)
                          Dom_html.event_listener Js.prop;
    onpopstate : (Dom_html.window Js.t, Dom_html.popStateEvent Js.t)
                 Dom_html.event_listener Js.prop;
    onresize : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    onscroll : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onunload : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    open_ : Js.js_string Js.t ->
            Js.js_string Js.t ->
            Js.js_string Js.t Js.opt -> Dom_html.window Js.t Js.meth;
    outerHeight : int Js.optdef Js.readonly_prop;
    outerWidth : int Js.optdef Js.readonly_prop;
    parent : Dom_html.window Js.t Js.readonly_prop; print : unit Js.meth;
    prompt : Js.js_string Js.t ->
             Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    requestAnimationFrame : (float -> unit) Js.callback ->
                            Dom_html.animation_frame_request_id Js.meth;
    screen : Dom_html.screen Js.t Js.readonly_prop;
    scroll : int -> int -> unit Js.meth;
    sessionStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    setInterval : (unit -> unit) Js.callback ->
                  float -> Dom_html.interval_id Js.meth;
    setTimeout : (unit -> unit) Js.callback ->
                 float -> Dom_html.timeout_id Js.meth;
    stop : unit Js.meth; top : Dom_html.window Js.t Js.readonly_prop;
    undoManager : Dom_html.undoManager Js.t Js.readonly_prop >
  Js.t
)
type(
  < alert : Js.js_string Js.t -> unit Js.meth;
    applicationCache : Dom_html.applicationCache Js.t Js.readonly_prop;
    blur : unit Js.meth;
    cancelAnimationFrame : Dom_html.animation_frame_request_id ->
                           unit Js.meth;
    clearInterval : Dom_html.interval_id -> unit Js.meth;
    clearTimeout : Dom_html.timeout_id -> unit Js.meth; close : unit Js.meth;
    closed : bool Js.t Js.readonly_prop;
    confirm : Js.js_string Js.t -> bool Js.t Js.meth;
    document : Dom_html.document Js.t Js.readonly_prop; focus : unit Js.meth;
    frameElement : Dom_html.element Js.t Js.opt Js.readonly_prop;
    getSelection : Dom_html.selection Js.t Js.meth;
    history : Dom_html.history Js.t Js.readonly_prop;
    innerHeight : int Js.optdef Js.readonly_prop;
    innerWidth : int Js.optdef Js.readonly_prop;
    localStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    location : Dom_html.location Js.t Js.readonly_prop;
    name : Js.js_string Js.t Js.prop;
    navigator : Dom_html.navigator Js.t Js.readonly_prop;
    onbeforeunload : (Dom_html.window Js.t, Dom_html.event Js.t)
                     Dom_html.event_listener Js.prop;
    onblur : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onfocus : (Dom_html.window Js.t, Dom_html.event Js.t)
              Dom_html.event_listener Js.prop;
    onhashchange : (Dom_html.window Js.t, Dom_html.hashChangeEvent Js.t)
                   Dom_html.event_listener Js.prop;
    onkeydown : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onload : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onmousedown : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onoffline : (Dom_html.window Js.t, Dom_html.event Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ononline : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onorientationchange : (Dom_html.window Js.t, Dom_html.event Js.t)
                          Dom_html.event_listener Js.prop;
    onpopstate : (Dom_html.window Js.t, Dom_html.popStateEvent Js.t)
                 Dom_html.event_listener Js.prop;
    onresize : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    onscroll : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onunload : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    open_ : Js.js_string Js.t ->
            Js.js_string Js.t ->
            Js.js_string Js.t Js.opt -> Dom_html.window Js.t Js.meth;
    outerHeight : int Js.optdef Js.readonly_prop;
    outerWidth : int Js.optdef Js.readonly_prop;
    parent : Dom_html.window Js.t Js.readonly_prop; print : unit Js.meth;
    prompt : Js.js_string Js.t ->
             Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    requestAnimationFrame : (float -> unit) Js.callback ->
                            Dom_html.animation_frame_request_id Js.meth;
    screen : Dom_html.screen Js.t Js.readonly_prop;
    scroll : int -> int -> unit Js.meth;
    sessionStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    setInterval : (unit -> unit) Js.callback ->
                  float -> Dom_html.interval_id Js.meth;
    setTimeout : (unit -> unit) Js.callback ->
                 float -> Dom_html.timeout_id Js.meth;
    stop : unit Js.meth; top : Dom_html.window Js.t Js.readonly_prop;
    undoManager : Dom_html.undoManager Js.t Js.readonly_prop >
  Js.t
)
type(
  Dom_html.window Js.t
)
ident(
  int_ref jsoo_self "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1538
)
type(
  Dom_html.window Js.t
)
ident(
  ext_ref Dom_html.window
)
"lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 49 1376 1418
call(
  tail
)
type(
  (float -> unit) Js.callback -> Dom_html.animation_frame_request_id Js.meth
)
type(
  (float -> unit) Js.callback -> Dom_html.animation_frame_request_id Js.meth
)
"lib/drumGame.ml" 50 1420 1424 "lib/drumGame.ml" 50 1420 1440
type(
  (float -> unit) -> (unit, float -> unit) Js.meth_callback
)
ident(
  ext_ref Js.wrap_callback
)
"lib/drumGame.ml" 50 1420 1446 "lib/drumGame.ml" 50 1420 1447
type(
  float
)
ident(
  def t "lib/drumGame.ml" 52 1493 1501 "lib/drumGame.ml" 52 1493 1526
)
"lib/drumGame.ml" 52 1493 1501 "lib/drumGame.ml" 52 1493 1507
type(
  state -> unit
)
ident(
  int_ref update "lib/drumGame.ml" 48 1353 1361 "lib/drumGame.ml" 48 1353 1367
)
"lib/drumGame.ml" 52 1493 1509 "lib/drumGame.ml" 52 1493 1519
type(
  state -> state
)
ident(
  int_ref next_state "lib/drumGame.ml" 38 1027 1031 "lib/drumGame.ml" 38 1027 1041
)
"lib/drumGame.ml" 52 1493 1520 "lib/drumGame.ml" 52 1493 1525
type(
  state
)
ident(
  int_ref state "lib/drumGame.ml" 48 1353 1368 "lib/drumGame.ml" 48 1353 1373
)
"lib/drumGame.ml" 52 1493 1509 "lib/drumGame.ml" 52 1493 1525
call(
  stack
)
type(
  state
)
"lib/drumGame.ml" 52 1493 1501 "lib/drumGame.ml" 52 1493 1526
call(
  tail
)
type(
  unit
)
"lib/drumGame.ml" 50 1420 1446 "lib/drumGame.ml" 52 1493 1526
type(
  float -> unit
)
"lib/drumGame.ml" 50 1420 1424 "lib/drumGame.ml" 53 1527 1534
type(
  Dom_html.animation_frame_request_id
)
type(
  (float -> unit) Js.callback
)
type(
  (float -> unit) Js.callback
)
ident(
  int_ref jsoo_1fb00604 "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1538
)
type(
  (float -> unit) Js.callback
)
type(
  (unit, float -> unit) Js.meth_callback
)
"lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1538
type(
  Dom_html.animation_frame_request_id
)
type(
  Dom_html.animation_frame_request_id
)
type(
  Dom_html.animation_frame_request_id
)
type(
  Dom_html.animation_frame_request_id
)
type(
  Dom_html.animation_frame_request_id
)
ident(
  int_ref M.res "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1538
)
type(
  Dom_html.animation_frame_request_id
)
type(
  Dom_html.animation_frame_request_id
)
type(
  Dom_html.animation_frame_request_id
)
type(
  Dom_html.animation_frame_request_id
)
ident(
  int_ref jsoo_res "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1538
)
type(
  < alert : Js.js_string Js.t -> unit Js.meth;
    applicationCache : Dom_html.applicationCache Js.t Js.readonly_prop;
    blur : unit Js.meth;
    cancelAnimationFrame : Dom_html.animation_frame_request_id ->
                           unit Js.meth;
    clearInterval : Dom_html.interval_id -> unit Js.meth;
    clearTimeout : Dom_html.timeout_id -> unit Js.meth; close : unit Js.meth;
    closed : bool Js.t Js.readonly_prop;
    confirm : Js.js_string Js.t -> bool Js.t Js.meth;
    document : Dom_html.document Js.t Js.readonly_prop; focus : unit Js.meth;
    frameElement : Dom_html.element Js.t Js.opt Js.readonly_prop;
    getSelection : Dom_html.selection Js.t Js.meth;
    history : Dom_html.history Js.t Js.readonly_prop;
    innerHeight : int Js.optdef Js.readonly_prop;
    innerWidth : int Js.optdef Js.readonly_prop;
    localStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    location : Dom_html.location Js.t Js.readonly_prop;
    name : Js.js_string Js.t Js.prop;
    navigator : Dom_html.navigator Js.t Js.readonly_prop;
    onbeforeunload : (Dom_html.window Js.t, Dom_html.event Js.t)
                     Dom_html.event_listener Js.prop;
    onblur : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onfocus : (Dom_html.window Js.t, Dom_html.event Js.t)
              Dom_html.event_listener Js.prop;
    onhashchange : (Dom_html.window Js.t, Dom_html.hashChangeEvent Js.t)
                   Dom_html.event_listener Js.prop;
    onkeydown : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onload : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onmousedown : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onoffline : (Dom_html.window Js.t, Dom_html.event Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ononline : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onorientationchange : (Dom_html.window Js.t, Dom_html.event Js.t)
                          Dom_html.event_listener Js.prop;
    onpopstate : (Dom_html.window Js.t, Dom_html.popStateEvent Js.t)
                 Dom_html.event_listener Js.prop;
    onresize : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    onscroll : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onunload : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    open_ : Js.js_string Js.t ->
            Js.js_string Js.t ->
            Js.js_string Js.t Js.opt -> Dom_html.window Js.t Js.meth;
    outerHeight : int Js.optdef Js.readonly_prop;
    outerWidth : int Js.optdef Js.readonly_prop;
    parent : Dom_html.window Js.t Js.readonly_prop; print : unit Js.meth;
    prompt : Js.js_string Js.t ->
             Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    requestAnimationFrame : (float -> unit) Js.callback ->
                            Dom_html.animation_frame_request_id Js.meth;
    screen : Dom_html.screen Js.t Js.readonly_prop;
    scroll : int -> int -> unit Js.meth;
    sessionStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    setInterval : (unit -> unit) Js.callback ->
                  float -> Dom_html.interval_id Js.meth;
    setTimeout : (unit -> unit) Js.callback ->
                 float -> Dom_html.timeout_id Js.meth;
    stop : unit Js.meth; top : Dom_html.window Js.t Js.readonly_prop;
    undoManager : Dom_html.undoManager Js.t Js.readonly_prop > ->
  (float -> unit) Js.callback -> Dom_html.animation_frame_request_id Js.meth
)
type(
  < alert : Js.js_string Js.t -> unit Js.meth;
    applicationCache : Dom_html.applicationCache Js.t Js.readonly_prop;
    blur : unit Js.meth;
    cancelAnimationFrame : Dom_html.animation_frame_request_id ->
                           unit Js.meth;
    clearInterval : Dom_html.interval_id -> unit Js.meth;
    clearTimeout : Dom_html.timeout_id -> unit Js.meth; close : unit Js.meth;
    closed : bool Js.t Js.readonly_prop;
    confirm : Js.js_string Js.t -> bool Js.t Js.meth;
    document : Dom_html.document Js.t Js.readonly_prop; focus : unit Js.meth;
    frameElement : Dom_html.element Js.t Js.opt Js.readonly_prop;
    getSelection : Dom_html.selection Js.t Js.meth;
    history : Dom_html.history Js.t Js.readonly_prop;
    innerHeight : int Js.optdef Js.readonly_prop;
    innerWidth : int Js.optdef Js.readonly_prop;
    localStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    location : Dom_html.location Js.t Js.readonly_prop;
    name : Js.js_string Js.t Js.prop;
    navigator : Dom_html.navigator Js.t Js.readonly_prop;
    onbeforeunload : (Dom_html.window Js.t, Dom_html.event Js.t)
                     Dom_html.event_listener Js.prop;
    onblur : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onfocus : (Dom_html.window Js.t, Dom_html.event Js.t)
              Dom_html.event_listener Js.prop;
    onhashchange : (Dom_html.window Js.t, Dom_html.hashChangeEvent Js.t)
                   Dom_html.event_listener Js.prop;
    onkeydown : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onload : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onmousedown : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onoffline : (Dom_html.window Js.t, Dom_html.event Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ononline : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onorientationchange : (Dom_html.window Js.t, Dom_html.event Js.t)
                          Dom_html.event_listener Js.prop;
    onpopstate : (Dom_html.window Js.t, Dom_html.popStateEvent Js.t)
                 Dom_html.event_listener Js.prop;
    onresize : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    onscroll : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onunload : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    open_ : Js.js_string Js.t ->
            Js.js_string Js.t ->
            Js.js_string Js.t Js.opt -> Dom_html.window Js.t Js.meth;
    outerHeight : int Js.optdef Js.readonly_prop;
    outerWidth : int Js.optdef Js.readonly_prop;
    parent : Dom_html.window Js.t Js.readonly_prop; print : unit Js.meth;
    prompt : Js.js_string Js.t ->
             Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    requestAnimationFrame : (float -> unit) Js.callback ->
                            Dom_html.animation_frame_request_id Js.meth;
    screen : Dom_html.screen Js.t Js.readonly_prop;
    scroll : int -> int -> unit Js.meth;
    sessionStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    setInterval : (unit -> unit) Js.callback ->
                  float -> Dom_html.interval_id Js.meth;
    setTimeout : (unit -> unit) Js.callback ->
                 float -> Dom_html.timeout_id Js.meth;
    stop : unit Js.meth; top : Dom_html.window Js.t Js.readonly_prop;
    undoManager : Dom_html.undoManager Js.t Js.readonly_prop >
)
ident(
  def x "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 49 1376 1418
)
type(
  < alert : Js.js_string Js.t -> unit Js.meth;
    applicationCache : Dom_html.applicationCache Js.t Js.readonly_prop;
    blur : unit Js.meth;
    cancelAnimationFrame : Dom_html.animation_frame_request_id ->
                           unit Js.meth;
    clearInterval : Dom_html.interval_id -> unit Js.meth;
    clearTimeout : Dom_html.timeout_id -> unit Js.meth; close : unit Js.meth;
    closed : bool Js.t Js.readonly_prop;
    confirm : Js.js_string Js.t -> bool Js.t Js.meth;
    document : Dom_html.document Js.t Js.readonly_prop; focus : unit Js.meth;
    frameElement : Dom_html.element Js.t Js.opt Js.readonly_prop;
    getSelection : Dom_html.selection Js.t Js.meth;
    history : Dom_html.history Js.t Js.readonly_prop;
    innerHeight : int Js.optdef Js.readonly_prop;
    innerWidth : int Js.optdef Js.readonly_prop;
    localStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    location : Dom_html.location Js.t Js.readonly_prop;
    name : Js.js_string Js.t Js.prop;
    navigator : Dom_html.navigator Js.t Js.readonly_prop;
    onbeforeunload : (Dom_html.window Js.t, Dom_html.event Js.t)
                     Dom_html.event_listener Js.prop;
    onblur : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onfocus : (Dom_html.window Js.t, Dom_html.event Js.t)
              Dom_html.event_listener Js.prop;
    onhashchange : (Dom_html.window Js.t, Dom_html.hashChangeEvent Js.t)
                   Dom_html.event_listener Js.prop;
    onkeydown : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onload : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onmousedown : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onoffline : (Dom_html.window Js.t, Dom_html.event Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ononline : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onorientationchange : (Dom_html.window Js.t, Dom_html.event Js.t)
                          Dom_html.event_listener Js.prop;
    onpopstate : (Dom_html.window Js.t, Dom_html.popStateEvent Js.t)
                 Dom_html.event_listener Js.prop;
    onresize : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    onscroll : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onunload : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    open_ : Js.js_string Js.t ->
            Js.js_string Js.t ->
            Js.js_string Js.t Js.opt -> Dom_html.window Js.t Js.meth;
    outerHeight : int Js.optdef Js.readonly_prop;
    outerWidth : int Js.optdef Js.readonly_prop;
    parent : Dom_html.window Js.t Js.readonly_prop; print : unit Js.meth;
    prompt : Js.js_string Js.t ->
             Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    requestAnimationFrame : (float -> unit) Js.callback ->
                            Dom_html.animation_frame_request_id Js.meth;
    screen : Dom_html.screen Js.t Js.readonly_prop;
    scroll : int -> int -> unit Js.meth;
    sessionStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    setInterval : (unit -> unit) Js.callback ->
                  float -> Dom_html.interval_id Js.meth;
    setTimeout : (unit -> unit) Js.callback ->
                 float -> Dom_html.timeout_id Js.meth;
    stop : unit Js.meth; top : Dom_html.window Js.t Js.readonly_prop;
    undoManager : Dom_html.undoManager Js.t Js.readonly_prop > ->
  (float -> unit) Js.callback -> Dom_html.animation_frame_request_id Js.meth
)
type(
  < alert : Js.js_string Js.t -> unit Js.meth;
    applicationCache : Dom_html.applicationCache Js.t Js.readonly_prop;
    blur : unit Js.meth;
    cancelAnimationFrame : Dom_html.animation_frame_request_id ->
                           unit Js.meth;
    clearInterval : Dom_html.interval_id -> unit Js.meth;
    clearTimeout : Dom_html.timeout_id -> unit Js.meth; close : unit Js.meth;
    closed : bool Js.t Js.readonly_prop;
    confirm : Js.js_string Js.t -> bool Js.t Js.meth;
    document : Dom_html.document Js.t Js.readonly_prop; focus : unit Js.meth;
    frameElement : Dom_html.element Js.t Js.opt Js.readonly_prop;
    getSelection : Dom_html.selection Js.t Js.meth;
    history : Dom_html.history Js.t Js.readonly_prop;
    innerHeight : int Js.optdef Js.readonly_prop;
    innerWidth : int Js.optdef Js.readonly_prop;
    localStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    location : Dom_html.location Js.t Js.readonly_prop;
    name : Js.js_string Js.t Js.prop;
    navigator : Dom_html.navigator Js.t Js.readonly_prop;
    onbeforeunload : (Dom_html.window Js.t, Dom_html.event Js.t)
                     Dom_html.event_listener Js.prop;
    onblur : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.window Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onfocus : (Dom_html.window Js.t, Dom_html.event Js.t)
              Dom_html.event_listener Js.prop;
    onhashchange : (Dom_html.window Js.t, Dom_html.hashChangeEvent Js.t)
                   Dom_html.event_listener Js.prop;
    onkeydown : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.window Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onload : (Dom_html.window Js.t, Dom_html.event Js.t)
             Dom_html.event_listener Js.prop;
    onmousedown : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.window Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onoffline : (Dom_html.window Js.t, Dom_html.event Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ononline : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onorientationchange : (Dom_html.window Js.t, Dom_html.event Js.t)
                          Dom_html.event_listener Js.prop;
    onpopstate : (Dom_html.window Js.t, Dom_html.popStateEvent Js.t)
                 Dom_html.event_listener Js.prop;
    onresize : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    onscroll : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    onunload : (Dom_html.window Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.prop;
    open_ : Js.js_string Js.t ->
            Js.js_string Js.t ->
            Js.js_string Js.t Js.opt -> Dom_html.window Js.t Js.meth;
    outerHeight : int Js.optdef Js.readonly_prop;
    outerWidth : int Js.optdef Js.readonly_prop;
    parent : Dom_html.window Js.t Js.readonly_prop; print : unit Js.meth;
    prompt : Js.js_string Js.t ->
             Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    requestAnimationFrame : (float -> unit) Js.callback ->
                            Dom_html.animation_frame_request_id Js.meth;
    screen : Dom_html.screen Js.t Js.readonly_prop;
    scroll : int -> int -> unit Js.meth;
    sessionStorage : Dom_html.storage Js.t Js.optdef Js.readonly_prop;
    setInterval : (unit -> unit) Js.callback ->
                  float -> Dom_html.interval_id Js.meth;
    setTimeout : (unit -> unit) Js.callback ->
                 float -> Dom_html.timeout_id Js.meth;
    stop : unit Js.meth; top : Dom_html.window Js.t Js.readonly_prop;
    undoManager : Dom_html.undoManager Js.t Js.readonly_prop >
  Js.t
)
type(
  Dom_html.animation_frame_request_id
)
ident(
  def res "lib/drumGame.ml" 54 1535 1538 "lib/drumGame.ml" 54 1535 1538
)
type(
  'a
)
type(
  Js.Unsafe.any array
)
type(
  Js.Unsafe.any
)
type(
  (unit, float -> unit) Js.meth_callback
)
ident(
  int_ref jsoo_1fb00604 "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1538
)
type(
  (unit, float -> unit) Js.meth_callback -> Js.Unsafe.any
)
ident(
  ext_ref Js.Unsafe.inject
)
type(
  string
)
type(
  Dom_html.window Js.t
)
ident(
  int_ref jsoo_self "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1538
)
type(
  Dom_html.window Js.t -> string -> Js.Unsafe.any array -> 'a
)
ident(
  ext_ref Js.Unsafe.meth_call
)
type(
  'a
)
ident(
  def jsoo_res "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1538
)
type(
  Dom_html.window Js.t
)
ident(
  def jsoo_self "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1538
)
type(
  (unit, float -> unit) Js.meth_callback
)
ident(
  def jsoo_1fb00604 "lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1538
)
"lib/drumGame.ml" 54 1535 1539 "lib/drumGame.ml" 54 1535 1541
type(
  Dom_html.animation_frame_request_id ->
  (Dom_html.animation_frame_request_id -> unit) -> unit
)
ident(
  ext_ref Pervasives.( |> )
)
"lib/drumGame.ml" 54 1535 1542 "lib/drumGame.ml" 54 1535 1548
type(
  Dom_html.animation_frame_request_id -> unit
)
ident(
  ext_ref Pervasives.ignore
)
"lib/drumGame.ml" 49 1376 1378 "lib/drumGame.ml" 54 1535 1548
type(
  unit
)
"lib/drumGame.ml" 48 1353 1368 "lib/drumGame.ml" 54 1535 1548
type(
  state -> unit
)
"lib/drumGame.ml" 57 1551 1555 "lib/drumGame.ml" 57 1551 1574
type(
  'a -> unit
)
ident(
  def initialize_keyboard "lib/drumGame.ml" 71 1872 1872 "lib/drumGame.ml" 1 0 -1
)
"lib/drumGame.ml" 57 1551 1575 "lib/drumGame.ml" 57 1551 1580
type(
  'a
)
ident(
  def state "lib/drumGame.ml" 58 1583 1585 "lib/drumGame.ml" 68 1856 1869
)
"lib/drumGame.ml" 59 1611 1617 "lib/drumGame.ml" 59 1611 1618
type(
  unit Lwt.t
)
"lib/drumGame.ml" 60 1621 1625 "lib/drumGame.ml" 60 1621 1635
type(
  (?use_capture:bool ->
   Dom_html.document Js.t -> Dom_html.keyboardEvent Js.t Lwt.t) ->
  ?use_capture:bool ->
  Dom_html.document Js.t ->
  (Dom_html.keyboardEvent Js.t -> unit Lwt.t -> unit Lwt.t) -> unit Lwt.t
)
ident(
  ext_ref Lwt_js_events.async_loop
)
"lib/drumGame.ml" 60 1621 1636 "lib/drumGame.ml" 60 1621 1643
type(
  ?use_capture:bool ->
  Dom_html.document Js.t -> Dom_html.keyboardEvent Js.t Lwt.t
)
ident(
  ext_ref Lwt_js_events.keydown
)
"lib/drumGame.ml" 60 1621 1644 "lib/drumGame.ml" 60 1621 1652
type(
  Dom_html.document Js.t
)
ident(
  ext_ref DrumPervasives.document
)
"lib/drumGame.ml" 61 1653 1664 "lib/drumGame.ml" 61 1653 1665
type(
  Dom_html.keyboardEvent Js.t
)
ident(
  def e "lib/drumGame.ml" 61 1653 1666 "lib/drumGame.ml" 62 1702 1729
)
"lib/drumGame.ml" 61 1653 1666 "lib/drumGame.ml" 61 1653 1667
type(
  unit Lwt.t
)
"lib/drumGame.ml" 61 1653 1675 "lib/drumGame.ml" 61 1653 1676
type(
  unit
)
"lib/drumGame.ml" 61 1653 1679 "lib/drumGame.ml" 61 1653 1699
type(
  Dom_html.keyboardEvent Js.t -> unit
)
ident(
  ext_ref DrumKeyboard.keydown
)
"lib/drumGame.ml" 61 1653 1700 "lib/drumGame.ml" 61 1653 1701
type(
  Dom_html.keyboardEvent Js.t
)
ident(
  int_ref e "lib/drumGame.ml" 61 1653 1664 "lib/drumGame.ml" 61 1653 1665
)
"lib/drumGame.ml" 61 1653 1679 "lib/drumGame.ml" 61 1653 1701
call(
  stack
)
type(
  unit
)
"lib/drumGame.ml" 62 1702 1714 "lib/drumGame.ml" 62 1702 1729
type(
  unit Lwt.t
)
ident(
  ext_ref Lwt.return_unit
)
"lib/drumGame.ml" 61 1653 1671 "lib/drumGame.ml" 62 1702 1729
type(
  unit Lwt.t
)
"lib/drumGame.ml" 61 1653 1666 "lib/drumGame.ml" 62 1702 1729
type(
  unit Lwt.t -> unit Lwt.t
)
"lib/drumGame.ml" 61 1653 1664 "lib/drumGame.ml" 62 1702 1729
type(
  Dom_html.keyboardEvent Js.t -> unit Lwt.t -> unit Lwt.t
)
"lib/drumGame.ml" 60 1621 1625 "lib/drumGame.ml" 63 1730 1737
call(
  stack
)
type(
  unit Lwt.t
)
"lib/drumGame.ml" 64 1741 1747 "lib/drumGame.ml" 64 1741 1748
type(
  unit Lwt.t
)
"lib/drumGame.ml" 65 1751 1755 "lib/drumGame.ml" 65 1751 1765
type(
  (?use_capture:bool ->
   Dom_html.document Js.t -> Dom_html.keyboardEvent Js.t Lwt.t) ->
  ?use_capture:bool ->
  Dom_html.document Js.t ->
  (Dom_html.keyboardEvent Js.t -> unit Lwt.t -> unit Lwt.t) -> unit Lwt.t
)
ident(
  ext_ref Lwt_js_events.async_loop
)
"lib/drumGame.ml" 65 1751 1766 "lib/drumGame.ml" 65 1751 1771
type(
  ?use_capture:bool ->
  Dom_html.document Js.t -> Dom_html.keyboardEvent Js.t Lwt.t
)
ident(
  ext_ref Lwt_js_events.keyup
)
"lib/drumGame.ml" 65 1751 1772 "lib/drumGame.ml" 65 1751 1780
type(
  Dom_html.document Js.t
)
ident(
  ext_ref DrumPervasives.document
)
"lib/drumGame.ml" 66 1781 1792 "lib/drumGame.ml" 66 1781 1793
type(
  Dom_html.keyboardEvent Js.t
)
ident(
  def e "lib/drumGame.ml" 66 1781 1794 "lib/drumGame.ml" 67 1828 1855
)
"lib/drumGame.ml" 66 1781 1794 "lib/drumGame.ml" 66 1781 1795
type(
  unit Lwt.t
)
"lib/drumGame.ml" 66 1781 1803 "lib/drumGame.ml" 66 1781 1804
type(
  unit
)
"lib/drumGame.ml" 66 1781 1807 "lib/drumGame.ml" 66 1781 1825
type(
  Dom_html.keyboardEvent Js.t -> unit
)
ident(
  ext_ref DrumKeyboard.keyup
)
"lib/drumGame.ml" 66 1781 1826 "lib/drumGame.ml" 66 1781 1827
type(
  Dom_html.keyboardEvent Js.t
)
ident(
  int_ref e "lib/drumGame.ml" 66 1781 1792 "lib/drumGame.ml" 66 1781 1793
)
"lib/drumGame.ml" 66 1781 1807 "lib/drumGame.ml" 66 1781 1827
call(
  stack
)
type(
  unit
)
"lib/drumGame.ml" 67 1828 1840 "lib/drumGame.ml" 67 1828 1855
type(
  unit Lwt.t
)
ident(
  ext_ref Lwt.return_unit
)
"lib/drumGame.ml" 66 1781 1799 "lib/drumGame.ml" 67 1828 1855
type(
  unit Lwt.t
)
"lib/drumGame.ml" 66 1781 1794 "lib/drumGame.ml" 67 1828 1855
type(
  unit Lwt.t -> unit Lwt.t
)
"lib/drumGame.ml" 66 1781 1792 "lib/drumGame.ml" 67 1828 1855
type(
  Dom_html.keyboardEvent Js.t -> unit Lwt.t -> unit Lwt.t
)
"lib/drumGame.ml" 65 1751 1755 "lib/drumGame.ml" 68 1856 1863
call(
  stack
)
type(
  unit Lwt.t
)
"lib/drumGame.ml" 68 1856 1867 "lib/drumGame.ml" 68 1856 1869
type(
  unit
)
"lib/drumGame.ml" 64 1741 1743 "lib/drumGame.ml" 68 1856 1869
type(
  unit
)
"lib/drumGame.ml" 59 1611 1613 "lib/drumGame.ml" 68 1856 1869
type(
  unit
)
"lib/drumGame.ml" 57 1551 1575 "lib/drumGame.ml" 68 1856 1869
type(
  'a -> unit
)
"lib/drumGame.ml" 71 1872 1876 "lib/drumGame.ml" 71 1872 1882
type(
  ?bgcolor:DrumColor.t -> int -> int -> string -> state
)
ident(
  def create "lib/drumGame.ml" 86 2367 2367 "lib/drumGame.ml" 1 0 -1
)
"lib/drumGame.ml" 71 1872 1895 "lib/drumGame.ml" 71 1872 1910
type(
  DrumColor.t
)
ident(
  ext_ref DrumColor.black
)
type(
  DrumColor.t
)
ident(
  int_ref *sth* "lib/drumGame.ml" 71 1872 1895 "lib/drumGame.ml" 71 1872 1910
)
type(
  DrumColor.t option
)
type(
  DrumColor.t option
)
type(
  DrumColor.t
)
"lib/drumGame.ml" 71 1872 1883 "lib/drumGame.ml" 71 1872 1911
type(
  DrumColor.t
)
"lib/drumGame.ml" 71 1872 1912 "lib/drumGame.ml" 71 1872 1917
type(
  int
)
ident(
  def width "lib/drumGame.ml" 71 1872 1918 "lib/drumGame.ml" 84 2361 2365
)
"lib/drumGame.ml" 71 1872 1918 "lib/drumGame.ml" 71 1872 1924
type(
  int
)
ident(
  def height "lib/drumGame.ml" 71 1872 1925 "lib/drumGame.ml" 84 2361 2365
)
"lib/drumGame.ml" 71 1872 1925 "lib/drumGame.ml" 71 1872 1933
type(
  string
)
ident(
  def receiver "lib/drumGame.ml" 72 1936 1938 "lib/drumGame.ml" 84 2361 2365
)
"lib/drumGame.ml" 72 1936 1942 "lib/drumGame.ml" 72 1936 1945
type(
  Dom_html.element Js.t
)
ident(
  def elt "lib/drumGame.ml" 77 2061 2063 "lib/drumGame.ml" 84 2361 2365
)
"lib/drumGame.ml" 73 1948 1952 "lib/drumGame.ml" 73 1948 1966
type(
  (unit -> Dom_html.element Js.t) -> string -> Dom_html.element Js.t
)
ident(
  ext_ref DrumPervasives.Error.try_with
)
"lib/drumGame.ml" 74 1967 1978 "lib/drumGame.ml" 74 1967 1980
type(
  unit
)
"lib/drumGame.ml" 74 1967 1984 "lib/drumGame.ml" 74 1967 2007
type(
  string -> Dom_html.element Js.t
)
ident(
  ext_ref Dom_html.getElementById
)
"lib/drumGame.ml" 74 1967 2008 "lib/drumGame.ml" 74 1967 2016
type(
  string
)
ident(
  int_ref receiver "lib/drumGame.ml" 71 1872 1925 "lib/drumGame.ml" 71 1872 1933
)
"lib/drumGame.ml" 74 1967 1984 "lib/drumGame.ml" 74 1967 2016
call(
  tail
)
type(
  Dom_html.element Js.t
)
"lib/drumGame.ml" 74 1967 1978 "lib/drumGame.ml" 74 1967 2016
type(
  unit -> Dom_html.element Js.t
)
"lib/drumGame.ml" 75 2018 2025 "lib/drumGame.ml" 75 2018 2043
type(
  string
)
"lib/drumGame.ml" 75 2018 2044 "lib/drumGame.ml" 75 2018 2045
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"lib/drumGame.ml" 75 2018 2046 "lib/drumGame.ml" 75 2018 2054
type(
  string
)
ident(
  int_ref receiver "lib/drumGame.ml" 71 1872 1925 "lib/drumGame.ml" 71 1872 1933
)
"lib/drumGame.ml" 75 2018 2025 "lib/drumGame.ml" 75 2018 2054
call(
  stack
)
type(
  string
)
"lib/drumGame.ml" 73 1948 1952 "lib/drumGame.ml" 75 2018 2055
call(
  stack
)
type(
  Dom_html.element Js.t
)
"lib/drumGame.ml" 77 2061 2067 "lib/drumGame.ml" 77 2061 2073
type(
  Dom_html.canvasElement Js.t
)
ident(
  def canvas "lib/drumGame.ml" 78 2112 2114 "lib/drumGame.ml" 84 2361 2365
)
"lib/drumGame.ml" 77 2061 2086 "lib/drumGame.ml" 77 2061 2098
type(
  Dom_html.document Js.t -> Dom_html.canvasElement Js.t
)
ident(
  ext_ref Dom_html.createCanvas
)
"lib/drumGame.ml" 77 2061 2099 "lib/drumGame.ml" 77 2061 2107
type(
  Dom_html.document Js.t
)
ident(
  ext_ref Dom_html.document
)
"lib/drumGame.ml" 77 2061 2086 "lib/drumGame.ml" 77 2061 2107
call(
  stack
)
type(
  Dom_html.canvasElement Js.t
)
"lib/drumGame.ml" 78 2112 2118 "lib/drumGame.ml" 78 2112 2120
type(
  unit
)
"lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2130
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
)
ident(
  int_ref x "lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2148
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref jsoo_obj "lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2148
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref canvas "lib/drumGame.ml" 77 2061 2067 "lib/drumGame.ml" 77 2061 2073
)
"lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2139
call(
  tail
)
type(
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  int Js.prop
)
"lib/drumGame.ml" 78 2112 2143 "lib/drumGame.ml" 78 2112 2148
type(
  int
)
type(
  int
)
ident(
  int_ref jsoo_arg "lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2148
)
type(
  int
)
ident(
  int_ref width "lib/drumGame.ml" 71 1872 1912 "lib/drumGame.ml" 71 1872 1917
)
"lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2148
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  int
)
ident(
  int_ref jsoo_arg "lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2148
)
type(
  string
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref jsoo_obj "lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2148
)
type(
  Dom_html.canvasElement Js.t -> string -> int -> unit
)
ident(
  ext_ref Js.Unsafe.set
)
type(
  int
)
type(
  int
)
ident(
  int_ref M.res "lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2148
)
type(
  int
)
type(
  int
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop > ->
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
)
ident(
  def x "lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2139
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop > ->
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  int
)
ident(
  def res "lib/drumGame.ml" 78 2112 2148 "lib/drumGame.ml" 78 2112 2148
)
type(
  int
)
type(
  int
)
ident(
  def jsoo_arg "lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2148
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  def jsoo_obj "lib/drumGame.ml" 78 2112 2124 "lib/drumGame.ml" 78 2112 2148
)
"lib/drumGame.ml" 79 2152 2158 "lib/drumGame.ml" 79 2152 2160
type(
  unit
)
"lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2170
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
)
ident(
  int_ref x "lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2190
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref jsoo_obj "lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2190
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref canvas "lib/drumGame.ml" 77 2061 2067 "lib/drumGame.ml" 77 2061 2073
)
"lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2180
call(
  tail
)
type(
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  int Js.prop
)
"lib/drumGame.ml" 79 2152 2184 "lib/drumGame.ml" 79 2152 2190
type(
  int
)
type(
  int
)
ident(
  int_ref jsoo_arg "lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2190
)
type(
  int
)
ident(
  int_ref height "lib/drumGame.ml" 71 1872 1918 "lib/drumGame.ml" 71 1872 1924
)
"lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2190
type(
  unit
)
type(
  unit
)
type(
  unit
)
type(
  int
)
ident(
  int_ref jsoo_arg "lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2190
)
type(
  string
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref jsoo_obj "lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2190
)
type(
  Dom_html.canvasElement Js.t -> string -> int -> unit
)
ident(
  ext_ref Js.Unsafe.set
)
type(
  int
)
type(
  int
)
ident(
  int_ref M.res "lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2190
)
type(
  int
)
type(
  int
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop > ->
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
)
ident(
  def x "lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2180
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop > ->
  < get : int; set : int -> unit > Js.gen_prop
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  int
)
ident(
  def res "lib/drumGame.ml" 79 2152 2190 "lib/drumGame.ml" 79 2152 2190
)
type(
  int
)
type(
  int
)
ident(
  def jsoo_arg "lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2190
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  def jsoo_obj "lib/drumGame.ml" 79 2152 2164 "lib/drumGame.ml" 79 2152 2190
)
"lib/drumGame.ml" 80 2194 2200 "lib/drumGame.ml" 80 2194 2203
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  def ctx "lib/drumGame.ml" 81 2245 2247 "lib/drumGame.ml" 84 2361 2365
)
"lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2212
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
)
ident(
  int_ref x "lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2241
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref jsoo_self "lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2241
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref canvas "lib/drumGame.ml" 77 2061 2067 "lib/drumGame.ml" 77 2061 2073
)
"lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2226
call(
  tail
)
type(
  Dom_html.context -> Dom_html.canvasRenderingContext2D Js.t Js.meth
)
type(
  Dom_html.context -> Dom_html.canvasRenderingContext2D Js.t Js.meth
)
"lib/drumGame.ml" 80 2194 2227 "lib/drumGame.ml" 80 2194 2240
type(
  Dom_html.canvasRenderingContext2D Js.t
)
type(
  Dom_html.context
)
type(
  Dom_html.context
)
ident(
  int_ref jsoo_665b7cbb "lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2241
)
type(
  Dom_html.context
)
type(
  Dom_html.context
)
ident(
  ext_ref Dom_html._2d_
)
"lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2241
type(
  Dom_html.canvasRenderingContext2D Js.t
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  int_ref M.res "lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2241
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  int_ref jsoo_res "lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2241
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop > ->
  Dom_html.context -> Dom_html.canvasRenderingContext2D Js.t Js.meth
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
)
ident(
  def x "lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2226
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop > ->
  Dom_html.context -> Dom_html.canvasRenderingContext2D Js.t Js.meth
)
type(
  < appendChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    attributes : Dom.attr Dom.namedNodeMap Js.t Js.readonly_prop;
    childNodes : Dom.node Dom.nodeList Js.t Js.prop;
    classList : Dom_html.tokenList Js.t Js.readonly_prop;
    className : Js.js_string Js.t Js.prop;
    clientHeight : int Js.readonly_prop; clientLeft : int Js.readonly_prop;
    clientTop : int Js.readonly_prop; clientWidth : int Js.readonly_prop;
    cloneNode : bool Js.t -> Dom.node Js.t Js.meth;
    compareDocumentPosition : Dom.node Js.t -> Dom.DocumentPosition.t Js.meth;
    cssText : Js.js_string Js.t Js.prop; dir : Js.js_string Js.t Js.prop;
    firstChild : Dom.node Js.t Js.opt Js.prop;
    getAttribute : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    getAttributeNode : Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getAttributeNodeNS : Js.js_string Js.t ->
                         Js.js_string Js.t -> Dom.attr Js.t Js.opt Js.meth;
    getBoundingClientRect : Dom_html.clientRect Js.t Js.meth;
    getClientRects : Dom_html.clientRectList Js.t Js.meth;
    getContext : Dom_html.context ->
                 Dom_html.canvasRenderingContext2D Js.t Js.meth;
    getElementsByTagName : Js.js_string Js.t ->
                           Dom.element Dom.nodeList Js.t Js.meth;
    hasAttribute : Js.js_string Js.t -> bool Js.t Js.meth;
    hasAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> bool Js.t Js.meth;
    hasChildNodes : bool Js.t Js.meth; height : int Js.prop;
    id : Js.js_string Js.t Js.prop; innerHTML : Js.js_string Js.t Js.prop;
    insertBefore : Dom.node Js.t ->
                   Dom.node Js.t Js.opt -> Dom.node Js.t Js.meth;
    lang : Js.js_string Js.t Js.prop;
    lastChild : Dom.node Js.t Js.opt Js.prop;
    lookupNamespaceURI : Js.js_string Js.t ->
                         Js.js_string Js.t Js.opt Js.meth;
    lookupPrefix : Js.js_string Js.t -> Js.js_string Js.t Js.opt Js.meth;
    namespaceURI : Js.js_string Js.t Js.opt Js.prop;
    nextSibling : Dom.node Js.t Js.opt Js.prop;
    nodeName : Js.js_string Js.t Js.readonly_prop;
    nodeType : Dom.nodeType Js.readonly_prop;
    nodeValue : Js.js_string Js.t Js.opt Js.readonly_prop;
    offsetHeight : int Js.readonly_prop; offsetLeft : int Js.readonly_prop;
    offsetParent : Dom_html.element Js.t Js.opt Js.readonly_prop;
    offsetTop : int Js.readonly_prop; offsetWidth : int Js.readonly_prop;
    onclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    ondblclick : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondrag : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    ondragend : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    ondragenter : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragleave : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondragover : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    ondragstart : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    ondrop : (Dom_html.canvasElement Js.t, Dom_html.dragEvent Js.t)
             Dom_html.event_listener Js.writeonly_prop;
    onkeydown : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onkeypress : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onkeyup : (Dom_html.canvasElement Js.t, Dom_html.keyboardEvent Js.t)
              Dom_html.event_listener Js.writeonly_prop;
    onmousedown : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmousemove : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseout : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                 Dom_html.event_listener Js.writeonly_prop;
    onmouseover : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                  Dom_html.event_listener Js.writeonly_prop;
    onmouseup : (Dom_html.canvasElement Js.t, Dom_html.mouseEvent Js.t)
                Dom_html.event_listener Js.writeonly_prop;
    onscroll : (Dom_html.canvasElement Js.t, Dom_html.event Js.t)
               Dom_html.event_listener Js.writeonly_prop;
    outerHTML : Js.js_string Js.t Js.prop;
    parentNode : Dom.node Js.t Js.opt Js.prop;
    previousSibling : Dom.node Js.t Js.opt Js.prop;
    querySelector : Js.js_string Js.t -> Dom_html.element Js.t Js.opt Js.meth;
    querySelectorAll : Js.js_string Js.t ->
                       Dom_html.element Dom.nodeList Js.t Js.meth;
    removeAttribute : Js.js_string Js.t -> unit Js.meth;
    removeAttributeNS : Js.js_string Js.t ->
                        Js.js_string Js.t -> unit Js.meth;
    removeAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.meth;
    removeChild : Dom.node Js.t -> Dom.node Js.t Js.meth;
    replaceChild : Dom.node Js.t -> Dom.node Js.t -> Dom.node Js.t Js.meth;
    scrollHeight : int Js.prop; scrollIntoView : bool Js.t -> unit Js.meth;
    scrollLeft : int Js.prop; scrollTop : int Js.prop;
    scrollWidth : int Js.prop;
    setAttribute : Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNS : Js.js_string Js.t ->
                     Js.js_string Js.t -> Js.js_string Js.t -> unit Js.meth;
    setAttributeNode : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    setAttributeNodeNS : Dom.attr Js.t -> Dom.attr Js.t Js.opt Js.meth;
    style : Dom_html.cssStyleDeclaration Js.t Js.prop;
    tagName : Js.js_string Js.t Js.readonly_prop;
    textContent : Js.js_string Js.t Js.opt Js.prop;
    title : Js.js_string Js.t Js.prop; toDataURL : Js.js_string Js.t Js.meth;
    width : int Js.prop >
  Js.t
)
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  def res "lib/drumGame.ml" 80 2194 2241 "lib/drumGame.ml" 80 2194 2241
)
type(
  'a
)
type(
  Js.Unsafe.any array
)
type(
  Js.Unsafe.any
)
type(
  Dom_html.context
)
ident(
  int_ref jsoo_665b7cbb "lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2241
)
type(
  Dom_html.context -> Js.Unsafe.any
)
ident(
  ext_ref Js.Unsafe.inject
)
type(
  string
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref jsoo_self "lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2241
)
type(
  Dom_html.canvasElement Js.t -> string -> Js.Unsafe.any array -> 'a
)
ident(
  ext_ref Js.Unsafe.meth_call
)
type(
  'a
)
ident(
  def jsoo_res "lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2241
)
type(
  Dom_html.canvasElement Js.t
)
ident(
  def jsoo_self "lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2241
)
type(
  Dom_html.context
)
ident(
  def jsoo_665b7cbb "lib/drumGame.ml" 80 2194 2206 "lib/drumGame.ml" 80 2194 2241
)
"lib/drumGame.ml" 81 2245 2251 "lib/drumGame.ml" 81 2245 2253
type(
  unit
)
"lib/drumGame.ml" 81 2245 2257 "lib/drumGame.ml" 81 2245 2272
type(
  Dom_html.element Js.t -> Dom_html.canvasElement Js.t -> unit
)
ident(
  ext_ref Dom.appendChild
)
"lib/drumGame.ml" 81 2245 2273 "lib/drumGame.ml" 81 2245 2276
type(
  Dom_html.element Js.t
)
ident(
  int_ref elt "lib/drumGame.ml" 72 1936 1942 "lib/drumGame.ml" 72 1936 1945
)
"lib/drumGame.ml" 81 2245 2277 "lib/drumGame.ml" 81 2245 2283
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref canvas "lib/drumGame.ml" 77 2061 2067 "lib/drumGame.ml" 77 2061 2073
)
"lib/drumGame.ml" 81 2245 2257 "lib/drumGame.ml" 81 2245 2283
call(
  stack
)
type(
  unit
)
"lib/drumGame.ml" 82 2287 2293 "lib/drumGame.ml" 82 2287 2295
type(
  state
)
ident(
  def st "lib/drumGame.ml" 83 2323 2325 "lib/drumGame.ml" 84 2361 2365
)
"lib/drumGame.ml" 82 2287 2299 "lib/drumGame.ml" 82 2287 2308
type(
  Dom_html.canvasElement Js.t ->
  Dom_html.canvasRenderingContext2D Js.t -> state
)
ident(
  int_ref singleton "lib/drumGame.ml" 30 889 893 "lib/drumGame.ml" 30 889 902
)
"lib/drumGame.ml" 82 2287 2309 "lib/drumGame.ml" 82 2287 2315
type(
  Dom_html.canvasElement Js.t
)
ident(
  int_ref canvas "lib/drumGame.ml" 77 2061 2067 "lib/drumGame.ml" 77 2061 2073
)
"lib/drumGame.ml" 82 2287 2316 "lib/drumGame.ml" 82 2287 2319
type(
  Dom_html.canvasRenderingContext2D Js.t
)
ident(
  int_ref ctx "lib/drumGame.ml" 80 2194 2200 "lib/drumGame.ml" 80 2194 2203
)
"lib/drumGame.ml" 82 2287 2299 "lib/drumGame.ml" 82 2287 2319
call(
  stack
)
type(
  state
)
"lib/drumGame.ml" 83 2323 2329 "lib/drumGame.ml" 83 2323 2330
type(
  unit
)
"lib/drumGame.ml" 83 2323 2335 "lib/drumGame.ml" 83 2323 2346
type(
  DrumColor.t -> state -> unit
)
ident(
  int_ref fill_canvas "lib/drumGame.ml" 42 1124 1128 "lib/drumGame.ml" 42 1124 1139
)
"lib/drumGame.ml" 83 2323 2347 "lib/drumGame.ml" 83 2323 2354
type(
  DrumColor.t
)
ident(
  int_ref bgcolor "lib/drumGame.ml" 71 1872 1883 "lib/drumGame.ml" 71 1872 1911
)
"lib/drumGame.ml" 83 2323 2355 "lib/drumGame.ml" 83 2323 2357
type(
  state
)
ident(
  int_ref st "lib/drumGame.ml" 82 2287 2293 "lib/drumGame.ml" 82 2287 2295
)
"lib/drumGame.ml" 83 2323 2335 "lib/drumGame.ml" 83 2323 2357
call(
  stack
)
type(
  unit
)
"lib/drumGame.ml" 84 2361 2363 "lib/drumGame.ml" 84 2361 2365
type(
  state
)
ident(
  int_ref st "lib/drumGame.ml" 82 2287 2293 "lib/drumGame.ml" 82 2287 2295
)
"lib/drumGame.ml" 83 2323 2325 "lib/drumGame.ml" 84 2361 2365
type(
  state
)
"lib/drumGame.ml" 82 2287 2289 "lib/drumGame.ml" 84 2361 2365
type(
  state
)
"lib/drumGame.ml" 81 2245 2247 "lib/drumGame.ml" 84 2361 2365
type(
  state
)
"lib/drumGame.ml" 80 2194 2196 "lib/drumGame.ml" 84 2361 2365
type(
  state
)
"lib/drumGame.ml" 79 2152 2154 "lib/drumGame.ml" 84 2361 2365
type(
  state
)
"lib/drumGame.ml" 78 2112 2114 "lib/drumGame.ml" 84 2361 2365
type(
  state
)
"lib/drumGame.ml" 77 2061 2063 "lib/drumGame.ml" 84 2361 2365
type(
  state
)
"lib/drumGame.ml" 72 1936 1938 "lib/drumGame.ml" 84 2361 2365
type(
  state
)
"lib/drumGame.ml" 71 1872 1925 "lib/drumGame.ml" 84 2361 2365
type(
  string -> state
)
"lib/drumGame.ml" 71 1872 1918 "lib/drumGame.ml" 84 2361 2365
type(
  int -> string -> state
)
"lib/drumGame.ml" 71 1872 1912 "lib/drumGame.ml" 84 2361 2365
type(
  int -> int -> string -> state
)
"lib/drumGame.ml" 71 1872 1883 "lib/drumGame.ml" 84 2361 2365
type(
  ?bgcolor:DrumColor.t -> int -> int -> string -> state
)
type(
  int -> int -> string -> state
)
type(
  DrumColor.t
)
type(
  DrumColor.t option
)
ident(
  int_ref *opt* "lib/drumGame.ml" 71 1872 1883 "lib/drumGame.ml" 84 2361 2365
)
type(
  DrumColor.t option
)
"lib/drumGame.ml" 86 2367 2371 "lib/drumGame.ml" 86 2367 2374
type(
  (state -> 'a) -> state -> unit
)
ident(
  def run "lib/drumGame.ml" 89 2450 2466 "lib/drumGame.ml" 1 0 -1
)
"lib/drumGame.ml" 86 2367 2375 "lib/drumGame.ml" 86 2367 2376
type(
  state -> 'a
)
ident(
  def f "lib/drumGame.ml" 86 2367 2377 "lib/drumGame.ml" 89 2450 2466
)
"lib/drumGame.ml" 86 2367 2377 "lib/drumGame.ml" 86 2367 2382
type(
  state
)
ident(
  def state "lib/drumGame.ml" 87 2385 2389 "lib/drumGame.ml" 89 2450 2466
)
"lib/drumGame.ml" 87 2385 2393 "lib/drumGame.ml" 87 2385 2395
type(
  unit
)
"lib/drumGame.ml" 87 2385 2398 "lib/drumGame.ml" 87 2385 2417
type(
  state -> unit
)
ident(
  int_ref initialize_keyboard "lib/drumGame.ml" 57 1551 1555 "lib/drumGame.ml" 57 1551 1574
)
"lib/drumGame.ml" 87 2385 2418 "lib/drumGame.ml" 87 2385 2423
type(
  state
)
ident(
  int_ref state "lib/drumGame.ml" 86 2367 2377 "lib/drumGame.ml" 86 2367 2382
)
"lib/drumGame.ml" 87 2385 2398 "lib/drumGame.ml" 87 2385 2423
call(
  stack
)
type(
  unit
)
"lib/drumGame.ml" 88 2427 2435 "lib/drumGame.ml" 88 2427 2436
type(
  'a
)
"lib/drumGame.ml" 88 2427 2439 "lib/drumGame.ml" 88 2427 2440
type(
  state -> 'a
)
ident(
  int_ref f "lib/drumGame.ml" 86 2367 2375 "lib/drumGame.ml" 86 2367 2376
)
"lib/drumGame.ml" 88 2427 2441 "lib/drumGame.ml" 88 2427 2446
type(
  state
)
ident(
  int_ref state "lib/drumGame.ml" 86 2367 2377 "lib/drumGame.ml" 86 2367 2382
)
"lib/drumGame.ml" 88 2427 2439 "lib/drumGame.ml" 88 2427 2446
call(
  stack
)
type(
  'a
)
"lib/drumGame.ml" 89 2450 2454 "lib/drumGame.ml" 89 2450 2460
type(
  state -> unit
)
ident(
  int_ref update "lib/drumGame.ml" 48 1353 1361 "lib/drumGame.ml" 48 1353 1367
)
"lib/drumGame.ml" 89 2450 2461 "lib/drumGame.ml" 89 2450 2466
type(
  state
)
ident(
  int_ref state "lib/drumGame.ml" 86 2367 2377 "lib/drumGame.ml" 86 2367 2382
)
"lib/drumGame.ml" 89 2450 2454 "lib/drumGame.ml" 89 2450 2466
call(
  tail
)
type(
  unit
)
"lib/drumGame.ml" 88 2427 2431 "lib/drumGame.ml" 89 2450 2466
type(
  unit
)
"lib/drumGame.ml" 87 2385 2389 "lib/drumGame.ml" 89 2450 2466
type(
  unit
)
"lib/drumGame.ml" 86 2367 2377 "lib/drumGame.ml" 89 2450 2466
type(
  state -> unit
)
"lib/drumGame.ml" 86 2367 2375 "lib/drumGame.ml" 89 2450 2466
type(
  (state -> 'a) -> state -> unit
)
